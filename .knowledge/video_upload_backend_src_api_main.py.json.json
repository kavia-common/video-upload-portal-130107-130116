{"is_source_file": true, "format": "Python", "description": "This is a FastAPI application code for a video upload backend service. It provides endpoints for health checking and uploading video files with size validation, saves files to a specified directory, and handles errors accordingly.", "external_files": ["fastapi", "fastapi.middleware.cors", "fastapi.responses", "pydantic", "os", "shutil", "pathlib.Path", "typing.Optional"], "external_methods": ["fastapi.FastAPI", "fastapi.CORSMiddleware", "fastapi.responses.JSONResponse", "pydantic.BaseModel", "pydantic.Field", "os.path.basename", "Path.exists", "Path.mkdir", "Path.unlink", "UploadFile.file.read", "UploadFile.file.seek"], "published": ["app", "health_check", "upload_video"], "classes": [{"name": "UploadResponse", "description": "Response model for successful upload, including filename, size in bytes, and a message."}, {"name": "ErrorResponse", "description": "Error response model for conveying error details."}], "methods": [{"name": "None _ensure_upload_dir_exists()", "description": "Ensures that the upload directory exists, creating it if necessary.", "scope": "", "scopeKind": ""}, {"name": "str _safe_filename(filename: str)", "description": "Sanitizes the filename to prevent directory traversal and remove unsupported characters.", "scope": "", "scopeKind": ""}, {"name": "int _compute_stream_size_and_save(upload_file: UploadFile, target_path: Path)", "description": "Streams the uploaded file to disk, tracking size to enforce maximum limit; raises error if exceeded.", "scope": "", "scopeKind": ""}, {"name": "health_check()", "description": "A simple GET endpoint that returns a health status message.", "scope": "", "scopeKind": ""}, {"name": "UploadResponse upload_video(file: UploadFile = File(..., description=\"Video file to upload\"))", "description": "POST endpoint for uploading a video file, validating size, sanitizing filename, saving file, and returning file info.", "scope": "", "scopeKind": ""}], "calls": ["_ensure_upload_dir_exists", "_safe_filename", "_compute_stream_size_and_save", "UPLOAD_DIR.mkdir", "target_path.exists", "target_path.unlink", "os.path.basename", "UploadFile.file.read", "UploadFile.file.seek"], "search-terms": ["FastAPI upload endpoint", "video file size limit", "upload directory creation", "filename sanitization", "multipart/form-data upload"], "state": 2, "file_id": 3, "knowledge_revision": 10, "git_revision": "7f29f5c96cde4be6b14c9b2cd3941d0bd33fdac3", "revision_history": [{"8": "7f29f5c96cde4be6b14c9b2cd3941d0bd33fdac3"}, {"10": "7f29f5c96cde4be6b14c9b2cd3941d0bd33fdac3"}], "ctags": [{"_type": "tag", "name": "ErrorResponse", "path": "/home/kavia/workspace/code-generation/video-upload-portal-130107-130116/video_upload_backend/src/api/main.py", "pattern": "/^class ErrorResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "MAX_FILE_SIZE_BYTES", "path": "/home/kavia/workspace/code-generation/video-upload-portal-130107-130116/video_upload_backend/src/api/main.py", "pattern": "/^MAX_FILE_SIZE_BYTES = 500 * 1024 * 1024  # 500MB$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "UPLOAD_DIR", "path": "/home/kavia/workspace/code-generation/video-upload-portal-130107-130116/video_upload_backend/src/api/main.py", "pattern": "/^UPLOAD_DIR = Path(\".\\/upload\").resolve()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "UploadResponse", "path": "/home/kavia/workspace/code-generation/video-upload-portal-130107-130116/video_upload_backend/src/api/main.py", "pattern": "/^class UploadResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_compute_stream_size_and_save", "path": "/home/kavia/workspace/code-generation/video-upload-portal-130107-130116/video_upload_backend/src/api/main.py", "pattern": "/^def _compute_stream_size_and_save(upload_file: UploadFile, target_path: Path) -> int:$/", "language": "Python", "typeref": "typename:int", "kind": "function", "signature": "(upload_file: UploadFile, target_path: Path)"}, {"_type": "tag", "name": "_ensure_upload_dir_exists", "path": "/home/kavia/workspace/code-generation/video-upload-portal-130107-130116/video_upload_backend/src/api/main.py", "pattern": "/^def _ensure_upload_dir_exists() -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_safe_filename", "path": "/home/kavia/workspace/code-generation/video-upload-portal-130107-130116/video_upload_backend/src/api/main.py", "pattern": "/^def _safe_filename(filename: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(filename: str)"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/video-upload-portal-130107-130116/video_upload_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "detail", "path": "/home/kavia/workspace/code-generation/video-upload-portal-130107-130116/video_upload_backend/src/api/main.py", "pattern": "/^    detail: str = Field(..., description=\"Description of the error that occurred\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "ErrorResponse", "scopeKind": "class"}, {"_type": "tag", "name": "filename", "path": "/home/kavia/workspace/code-generation/video-upload-portal-130107-130116/video_upload_backend/src/api/main.py", "pattern": "/^    filename: str = Field(..., description=\"Stored file name\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UploadResponse", "scopeKind": "class"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/video-upload-portal-130107-130116/video_upload_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/video-upload-portal-130107-130116/video_upload_backend/src/api/main.py", "pattern": "/^    message: str = Field(..., description=\"Informational message about the upload result\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UploadResponse", "scopeKind": "class"}, {"_type": "tag", "name": "size_bytes", "path": "/home/kavia/workspace/code-generation/video-upload-portal-130107-130116/video_upload_backend/src/api/main.py", "pattern": "/^    size_bytes: int = Field(..., description=\"Size of the uploaded file in bytes\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "UploadResponse", "scopeKind": "class"}, {"_type": "tag", "name": "upload_video", "path": "/home/kavia/workspace/code-generation/video-upload-portal-130107-130116/video_upload_backend/src/api/main.py", "pattern": "/^async def upload_video(file: UploadFile = File(..., description=\"Video file to upload\")) -> Uplo/", "language": "Python", "typeref": "typename:UploadResponse", "kind": "function", "signature": "(file: UploadFile = File(..., description=\"Video file to upload\"))"}], "hash": "d7d8c02ba144ef83eefbca9738613164", "format-version": 4, "code-base-name": "video_upload_backend", "filename": "video_upload_backend/src/api/main.py", "fields": [{"name": "MAX_FILE_SIZE_BYTES = 500 * 1024 * 1024  # 500MB", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "UPLOAD_DIR = Path(\".\\/upload\").resolve()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str detail", "scope": "ErrorResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "str filename", "scope": "UploadResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "str message", "scope": "UploadResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "int size_bytes", "scope": "UploadResponse", "scopeKind": "class", "description": "unavailable"}]}